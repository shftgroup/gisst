services:
  jaeger:
    image: jaegertracing/jaeger:${JAEGER_VERSION:-latest}
    container_name: jaeger
    environment:
      QUERY_BASE_PATH: $QUERY_BASE_PATH
    networks:
      backend:
      frontend:
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
      - "./docker-configs/config-spm.yaml:/etc/jaeger/config.yml"
    command: ["--config", "/etc/jaeger/config.yml", "--set=extensions.jaeger_query.base_path=${QUERY_BASE_PATH}"]
    ports:
      - "16686:16686"
      - "8888:8888"
      - "8889:8889"
      - "4317:4317"
      - "4318:4318"

  prometheus:
    image: prom/prometheus:v3.2.0
    container_name: prometheus
    networks:
      - backend
    volumes:
      - "./docker-configs/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    networks:
      - backend
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.rootfs=/rootfs'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--web.listen-address=0.0.0.0:9100'
    ports:
      - '9100:9100'

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SERVER_PROTOCOL: $GF_SERVER_PROTOCOL 
      GF_SERVER_ROOT_URL: $GF_SERVER_ROOT_URL
      GF_SERVER_DOMAIN: $GF_SERVER_DOMAIN
      GF_SERVER_SERVE_FROM_SUB_PATH: $GF_SERVER_SERVE_FROM_SUB_PATH
      GF_AUTH_PROXY_ENABLED: $GF_AUTH_PROXY_ENABLED
      GF_AUTH_PROXY_HEADERNAME: $GF_AUTH_PROXY_HEADERNAME
      GF_AUTH_PROXY_AUTO_SIGN_UP: $GF_AUTH_PROXY_AUTO_SIGN_UP
    networks:
      - backend
    extra_hosts:
      docker.host.internal: host-gateway
    volumes:
      - "grafana-storage:/var/lib/grafana"
    ports:
      - '3003:3000'

volumes:
  grafana-storage: {}

networks:
  backend:
  frontend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
