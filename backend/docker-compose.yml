services:
  jaeger:
    networks:
      backend:
        # This is the host name used in Prometheus scrape configuration.
        aliases: [ spm_metrics_source ]
      frontend:
    image: jaegertracing/jaeger:${JAEGER_VERSION:-latest}
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json" # Do we need this for v2 ? Seems to be running without this.
      - "./docker-configs/config-spm.yaml:/etc/jaeger/config.yml"
    command: ["--config", "/etc/jaeger/config.yml"]
    ports:
      - "16686:16686"
      - "8888:8888"
      - "8889:8889"
      - "4317:4317"
      - "4318:4318" # May not need this port if we're using 4317 on grpc

  # microsim:
  #   networks:
  #     - backend
  #   image: yurishkuro/microsim:v0.5.0
  #   command: "-d 24h -s 500ms"
  #   environment:
  #     - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4318/v1/traces
  #   depends_on:
  #     - jaeger


  prometheus:
    networks:
      - backend
    image: prom/prometheus:v3.2.0
    volumes:
      - "./docker-configs/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   network_mode: host
  #   pid: host
  #   restart: unless-stopped
  #   volumes:
  #     - '/:/host:ro,rslave'

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      - backend
    ports:
      - '3003:3000' # Graphana can be access on port 3003, instead of usual 3000 (where gisst is)
    volumes: 
      - "grafana-storage:/var/lib/grafana"
volumes:
  grafana-storage: {}

networks:
  backend:
  frontend: # An end to expose the docker network to localhost for gisst to connect
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
