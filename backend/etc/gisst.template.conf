server {
  listen 80;
  server_name SERVER_HOST_NAME;
  return 301 https://$server_name$request_uri;
}

upstream grafana {
  server localhost:3000;
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name SERVER_HOST_NAME;
  ssl_certificate          PATH_TO_CERT.chain.cer;
  ssl_certificate_key      PATH_TO_CERT.key;
  client_max_body_size BODY_LIMIT_SZ;
  location / {
    proxy_set_header   X-Forwarded-For $remote_addr;
    proxy_set_header   Host $http_host;
    proxy_pass_header  X-Accepted-Encoding;
    proxy_pass http://localhost:PORTNUMBER;
    proxy_pass_request_headers on;
  }
  location /tracing {
    auth_basic "GISST Tracing";
    auth_basic_user_file /etc/apache2/.htpasswd;

    proxy_pass http://localhost:16686;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_set_header X-NginX-Proxy true;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }
  location /dash {
    auth_basic "GISST Tracing";
    auth_basic_user_file /etc/apache2/.htpasswd;

    proxy_pass http://localhost:3003;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_set_header X-NginX-Proxy true;

    rewrite  ^/grafana/(.*)  /$1 break;
    proxy_pass http://grafana;
    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 86400;
  }

  location /dash/api/live/ {
    rewrite  ^/dash/(.*)  /$1 break;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_pass http://grafana;
  }
}
